# Generated from ./d3i/grammar/d3iLexer.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,41,332,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,
        5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
        1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
        1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,
        1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
        1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,
        1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
        1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,
        1,33,1,33,1,33,1,34,4,34,270,8,34,11,34,12,34,271,1,35,4,35,275,
        8,35,11,35,12,35,276,1,35,1,35,4,35,281,8,35,11,35,12,35,282,1,36,
        1,36,5,36,287,8,36,10,36,12,36,290,9,36,1,36,1,36,1,37,1,37,5,37,
        296,8,37,10,37,12,37,299,9,37,1,38,4,38,302,8,38,11,38,12,38,303,
        1,38,1,38,1,39,1,39,1,39,1,39,5,39,312,8,39,10,39,12,39,315,9,39,
        1,39,1,39,1,40,1,40,1,40,1,40,5,40,323,8,40,10,40,12,40,326,9,40,
        1,40,1,40,1,40,1,40,1,40,2,288,324,0,41,1,1,3,2,5,3,7,4,9,5,11,6,
        13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
        18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,
        29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,
        40,81,41,1,0,5,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,
        95,95,97,122,3,0,9,10,12,13,32,32,2,0,10,10,13,13,339,0,1,1,0,0,
        0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,
        13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
        23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,
        33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,
        43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,
        53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,
        63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,
        73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,1,
        83,1,0,0,0,3,85,1,0,0,0,5,87,1,0,0,0,7,89,1,0,0,0,9,91,1,0,0,0,11,
        93,1,0,0,0,13,95,1,0,0,0,15,97,1,0,0,0,17,99,1,0,0,0,19,101,1,0,
        0,0,21,103,1,0,0,0,23,105,1,0,0,0,25,112,1,0,0,0,27,120,1,0,0,0,
        29,126,1,0,0,0,31,133,1,0,0,0,33,143,1,0,0,0,35,151,1,0,0,0,37,161,
        1,0,0,0,39,165,1,0,0,0,41,177,1,0,0,0,43,182,1,0,0,0,45,193,1,0,
        0,0,47,198,1,0,0,0,49,206,1,0,0,0,51,213,1,0,0,0,53,219,1,0,0,0,
        55,224,1,0,0,0,57,229,1,0,0,0,59,238,1,0,0,0,61,245,1,0,0,0,63,253,
        1,0,0,0,65,259,1,0,0,0,67,264,1,0,0,0,69,269,1,0,0,0,71,274,1,0,
        0,0,73,284,1,0,0,0,75,293,1,0,0,0,77,301,1,0,0,0,79,307,1,0,0,0,
        81,318,1,0,0,0,83,84,5,46,0,0,84,2,1,0,0,0,85,86,5,44,0,0,86,4,1,
        0,0,0,87,88,5,58,0,0,88,6,1,0,0,0,89,90,5,40,0,0,90,8,1,0,0,0,91,
        92,5,41,0,0,92,10,1,0,0,0,93,94,5,123,0,0,94,12,1,0,0,0,95,96,5,
        125,0,0,96,14,1,0,0,0,97,98,5,91,0,0,98,16,1,0,0,0,99,100,5,93,0,
        0,100,18,1,0,0,0,101,102,5,64,0,0,102,20,1,0,0,0,103,104,5,124,0,
        0,104,22,1,0,0,0,105,106,5,100,0,0,106,107,5,111,0,0,107,108,5,109,
        0,0,108,109,5,97,0,0,109,110,5,105,0,0,110,111,5,110,0,0,111,24,
        1,0,0,0,112,113,5,99,0,0,113,114,5,111,0,0,114,115,5,110,0,0,115,
        116,5,116,0,0,116,117,5,101,0,0,117,118,5,120,0,0,118,119,5,116,
        0,0,119,26,1,0,0,0,120,121,5,101,0,0,121,122,5,118,0,0,122,123,5,
        101,0,0,123,124,5,110,0,0,124,125,5,116,0,0,125,28,1,0,0,0,126,127,
        5,101,0,0,127,128,5,110,0,0,128,129,5,116,0,0,129,130,5,105,0,0,
        130,131,5,116,0,0,131,132,5,121,0,0,132,30,1,0,0,0,133,134,5,97,
        0,0,134,135,5,103,0,0,135,136,5,103,0,0,136,137,5,114,0,0,137,138,
        5,101,0,0,138,139,5,103,0,0,139,140,5,97,0,0,140,141,5,116,0,0,141,
        142,5,101,0,0,142,32,1,0,0,0,143,144,5,115,0,0,144,145,5,101,0,0,
        145,146,5,114,0,0,146,147,5,118,0,0,147,148,5,105,0,0,148,149,5,
        99,0,0,149,150,5,101,0,0,150,34,1,0,0,0,151,152,5,105,0,0,152,153,
        5,110,0,0,153,154,5,116,0,0,154,155,5,101,0,0,155,156,5,114,0,0,
        156,157,5,102,0,0,157,158,5,97,0,0,158,159,5,99,0,0,159,160,5,101,
        0,0,160,36,1,0,0,0,161,162,5,97,0,0,162,163,5,99,0,0,163,164,5,108,
        0,0,164,38,1,0,0,0,165,166,5,118,0,0,166,167,5,97,0,0,167,168,5,
        108,0,0,168,169,5,117,0,0,169,170,5,101,0,0,170,171,5,79,0,0,171,
        172,5,98,0,0,172,173,5,106,0,0,173,174,5,101,0,0,174,175,5,99,0,
        0,175,176,5,116,0,0,176,40,1,0,0,0,177,178,5,101,0,0,178,179,5,110,
        0,0,179,180,5,117,0,0,180,181,5,109,0,0,181,42,1,0,0,0,182,183,5,
        114,0,0,183,184,5,101,0,0,184,185,5,112,0,0,185,186,5,111,0,0,186,
        187,5,115,0,0,187,188,5,105,0,0,188,189,5,116,0,0,189,190,5,111,
        0,0,190,191,5,114,0,0,191,192,5,121,0,0,192,44,1,0,0,0,193,194,5,
        114,0,0,194,195,5,111,0,0,195,196,5,111,0,0,196,197,5,116,0,0,197,
        46,1,0,0,0,198,199,5,105,0,0,199,200,5,110,0,0,200,201,5,116,0,0,
        201,202,5,101,0,0,202,203,5,103,0,0,203,204,5,101,0,0,204,205,5,
        114,0,0,205,48,1,0,0,0,206,207,5,110,0,0,207,208,5,117,0,0,208,209,
        5,109,0,0,209,210,5,98,0,0,210,211,5,101,0,0,211,212,5,114,0,0,212,
        50,1,0,0,0,213,214,5,102,0,0,214,215,5,108,0,0,215,216,5,111,0,0,
        216,217,5,97,0,0,217,218,5,116,0,0,218,52,1,0,0,0,219,220,5,100,
        0,0,220,221,5,97,0,0,221,222,5,116,0,0,222,223,5,101,0,0,223,54,
        1,0,0,0,224,225,5,116,0,0,225,226,5,105,0,0,226,227,5,109,0,0,227,
        228,5,101,0,0,228,56,1,0,0,0,229,230,5,100,0,0,230,231,5,97,0,0,
        231,232,5,116,0,0,232,233,5,101,0,0,233,234,5,84,0,0,234,235,5,105,
        0,0,235,236,5,109,0,0,236,237,5,101,0,0,237,58,1,0,0,0,238,239,5,
        115,0,0,239,240,5,116,0,0,240,241,5,114,0,0,241,242,5,105,0,0,242,
        243,5,110,0,0,243,244,5,103,0,0,244,60,1,0,0,0,245,246,5,98,0,0,
        246,247,5,111,0,0,247,248,5,111,0,0,248,249,5,108,0,0,249,250,5,
        101,0,0,250,251,5,97,0,0,251,252,5,110,0,0,252,62,1,0,0,0,253,254,
        5,98,0,0,254,255,5,121,0,0,255,256,5,116,0,0,256,257,5,101,0,0,257,
        258,5,115,0,0,258,64,1,0,0,0,259,260,5,108,0,0,260,261,5,105,0,0,
        261,262,5,115,0,0,262,263,5,116,0,0,263,66,1,0,0,0,264,265,5,109,
        0,0,265,266,5,97,0,0,266,267,5,112,0,0,267,68,1,0,0,0,268,270,7,
        0,0,0,269,268,1,0,0,0,270,271,1,0,0,0,271,269,1,0,0,0,271,272,1,
        0,0,0,272,70,1,0,0,0,273,275,7,0,0,0,274,273,1,0,0,0,275,276,1,0,
        0,0,276,274,1,0,0,0,276,277,1,0,0,0,277,278,1,0,0,0,278,280,5,46,
        0,0,279,281,7,0,0,0,280,279,1,0,0,0,281,282,1,0,0,0,282,280,1,0,
        0,0,282,283,1,0,0,0,283,72,1,0,0,0,284,288,5,34,0,0,285,287,9,0,
        0,0,286,285,1,0,0,0,287,290,1,0,0,0,288,289,1,0,0,0,288,286,1,0,
        0,0,289,291,1,0,0,0,290,288,1,0,0,0,291,292,5,34,0,0,292,74,1,0,
        0,0,293,297,7,1,0,0,294,296,7,2,0,0,295,294,1,0,0,0,296,299,1,0,
        0,0,297,295,1,0,0,0,297,298,1,0,0,0,298,76,1,0,0,0,299,297,1,0,0,
        0,300,302,7,3,0,0,301,300,1,0,0,0,302,303,1,0,0,0,303,301,1,0,0,
        0,303,304,1,0,0,0,304,305,1,0,0,0,305,306,6,38,0,0,306,78,1,0,0,
        0,307,308,5,47,0,0,308,309,5,47,0,0,309,313,1,0,0,0,310,312,8,4,
        0,0,311,310,1,0,0,0,312,315,1,0,0,0,313,311,1,0,0,0,313,314,1,0,
        0,0,314,316,1,0,0,0,315,313,1,0,0,0,316,317,6,39,1,0,317,80,1,0,
        0,0,318,319,5,47,0,0,319,320,5,42,0,0,320,324,1,0,0,0,321,323,9,
        0,0,0,322,321,1,0,0,0,323,326,1,0,0,0,324,325,1,0,0,0,324,322,1,
        0,0,0,325,327,1,0,0,0,326,324,1,0,0,0,327,328,5,42,0,0,328,329,5,
        47,0,0,329,330,1,0,0,0,330,331,6,40,1,0,331,82,1,0,0,0,9,0,271,276,
        282,288,297,303,313,324,2,6,0,0,0,2,0
    ]

class d3iLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    COMMENT_CHANNEL = 2

    DOT = 1
    COMMA = 2
    SEMI = 3
    LPAREN = 4
    RPAREN = 5
    LCURLY = 6
    RCURLY = 7
    LBARCKET = 8
    RBRACKET = 9
    AT = 10
    PIPE = 11
    DOMAIN = 12
    CONTEXT = 13
    EVENT = 14
    ENTITY = 15
    AGGREGATE = 16
    SERVICE = 17
    INTERFACE = 18
    ACL = 19
    VALUEOBJECT = 20
    ENUM = 21
    REPOSITORY = 22
    ROOT = 23
    INTEGER = 24
    NUMBER = 25
    FLOAT = 26
    DATE = 27
    TIME = 28
    DATETIME = 29
    STRING = 30
    BOOLEAN = 31
    BYTES = 32
    LIST = 33
    MAP = 34
    INTEGER_CONSTANS = 35
    NUMBER_CONSTANS = 36
    STRING_LITERAL = 37
    IDENTIFIER = 38
    WS = 39
    LINE_COMMENT = 40
    BLOCK_COMMENT = 41

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN", u"COMMENT_CHANNEL" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'.'", "','", "':'", "'('", "')'", "'{'", "'}'", "'['", "']'", 
            "'@'", "'|'", "'domain'", "'context'", "'event'", "'entity'", 
            "'aggregate'", "'service'", "'interface'", "'acl'", "'valueObject'", 
            "'enum'", "'repository'", "'root'", "'integer'", "'number'", 
            "'float'", "'date'", "'time'", "'dateTime'", "'string'", "'boolean'", 
            "'bytes'", "'list'", "'map'" ]

    symbolicNames = [ "<INVALID>",
            "DOT", "COMMA", "SEMI", "LPAREN", "RPAREN", "LCURLY", "RCURLY", 
            "LBARCKET", "RBRACKET", "AT", "PIPE", "DOMAIN", "CONTEXT", "EVENT", 
            "ENTITY", "AGGREGATE", "SERVICE", "INTERFACE", "ACL", "VALUEOBJECT", 
            "ENUM", "REPOSITORY", "ROOT", "INTEGER", "NUMBER", "FLOAT", 
            "DATE", "TIME", "DATETIME", "STRING", "BOOLEAN", "BYTES", "LIST", 
            "MAP", "INTEGER_CONSTANS", "NUMBER_CONSTANS", "STRING_LITERAL", 
            "IDENTIFIER", "WS", "LINE_COMMENT", "BLOCK_COMMENT" ]

    ruleNames = [ "DOT", "COMMA", "SEMI", "LPAREN", "RPAREN", "LCURLY", 
                  "RCURLY", "LBARCKET", "RBRACKET", "AT", "PIPE", "DOMAIN", 
                  "CONTEXT", "EVENT", "ENTITY", "AGGREGATE", "SERVICE", 
                  "INTERFACE", "ACL", "VALUEOBJECT", "ENUM", "REPOSITORY", 
                  "ROOT", "INTEGER", "NUMBER", "FLOAT", "DATE", "TIME", 
                  "DATETIME", "STRING", "BOOLEAN", "BYTES", "LIST", "MAP", 
                  "INTEGER_CONSTANS", "NUMBER_CONSTANS", "STRING_LITERAL", 
                  "IDENTIFIER", "WS", "LINE_COMMENT", "BLOCK_COMMENT" ]

    grammarFileName = "d3iLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


